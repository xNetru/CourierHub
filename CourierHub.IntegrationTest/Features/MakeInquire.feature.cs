// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CourierHub.IntegrationTest.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class MakeInquireFeature : object, Xunit.IClassFixture<MakeInquireFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "MakeInquire.feature"
#line hidden
        
        public MakeInquireFeature(MakeInquireFeature.FixtureData fixtureData, CourierHub_IntegrationTest_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "MakeInquire", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
#line 4
    testRunner.Given("the base address for MakeInquire is https://localhost:7008", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="User makes an inquire and receives an offer")]
        [Xunit.TraitAttribute("FeatureTitle", "MakeInquire")]
        [Xunit.TraitAttribute("Description", "User makes an inquire and receives an offer")]
        public virtual void UserMakesAnInquireAndReceivesAnOffer()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User makes an inquire and receives an offer", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 7
testRunner.Given(@"a user with inquire {""Email"":null,""Depth"":100,""Width"":100,""Length"":50,""Mass"":49,""SourceDate"":""2025-03-13T00:00:00"",""DestinationDate"":""2025-03-15T00:00:00"",""Datetime"":""2025-02-14T00:00:00"",""IsCompany"":true,""IsWeekend"":true,""Priority"":1,""Code"":"""",""Destination"":{""Street"":""Solna"",""Number"":""20"",""Flat"":""1a"",""PostalCode"":""20-192"",""City"":""Warszawa""},""Source"":{""Street"":""Ursynowska"",""Number"":""2"",""Flat"":""10"",""PostalCode"":""30-182"",""City"":""Toronto""}}", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
testRunner.When("he makes a request to Api/inquire", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
<<<<<<< HEAD
#line 9
testRunner.Then("he receives an offer {\"Price\":20.696256,\"Code\":\"MjAyNDExNDIxNDY1ODM4Mw==\",\"Servic" +
                        "eName\":null,\"ExpirationDate\":\"0001-01-01T00:00:00\"}", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
=======
#line 6
testRunner.Then("he receives an offer \"\"\"{\"Price\":20.696256,\"Code\":\"MjAyNWEybzMxNDEyMDIwMA==\",\"Ser" +
                        "viceName\":null,\"ExpirationDate\":\"0001-01-01T00:00:00\"}\"\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
>>>>>>> dev
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                MakeInquireFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                MakeInquireFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
