@inherits LayoutComponentBase
@using CourierHub.Shared

@using SM = CourierHub.Shared.Models;

@inject HttpClient Http
@inject AuthenticationStateProvider Provider
@inject NavigationManager Navigation

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <NotAuthorized>
                    <a class="nav-link btn btn-link" href="authentication/login">Log in</a>
                </NotAuthorized>
                <Authorized>
                    <a href="authentication/profile">Hello, @context.User.Identity?.Name</a>
                    <button class="nav-link btn btn-link" @onclick="BeginLogOut">Log out</button>
                    @if (present != null && present.IsSuccessStatusCode) {

                    } else {
                        
                    }
                </Authorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private void BeginLogOut() {
        Navigation.NavigateToLogout("authentication/logout");
    }

    private HttpResponseMessage? present;
    private HttpResponseMessage? added;

    protected override async Task OnAfterRenderAsync(bool _) {
        Console.WriteLine("IM HERE 0");
        var context = await Provider.GetAuthenticationStateAsync();
        if (context != null) {
            Console.WriteLine("IM HERE 1");
            var email = context.User.Claims.FirstOrDefault(c => c.Type == "email");
            if (email != null) {
                Console.WriteLine("IM HERE 2");
                Console.WriteLine($"{Http.BaseAddress}User/{email.Value}");
                present = await Http.SendAsync(new HttpRequestMessage(HttpMethod.Head, new Uri($"{Http.BaseAddress}User/{email.Value}")));
                if (present.IsSuccessStatusCode) {
                    Console.WriteLine("IM HERE 3");
                } else {
                    string username = context.User.Identity!.Name!;
                    string[] credentials = username.Split(" ");
                    var client = new SM.Client {
                        Id = 0,
                        Email = email.Value,
                        Name = credentials[0],
                        Surname = credentials[1]
                    };
                    if ((await Http.PostAsJsonAsync("User", client)).IsSuccessStatusCode) {
                        Console.WriteLine("IM HERE 4");
                    };
                    Console.WriteLine("IM HERE 5");
                }
            }
        }  
    }
}