@page "/OfficeWorker/Orders"

@using CourierHub.Shared.ApiModels
@using CourierHub.Shared.Data

@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider Provider
@inject OrderContainer Container

<h1>Historia zapytań</h1>

<table class="table">
    <thead>
        <tr>
            <th>Mail</th>
            <th>Firma</th>
            <th>Cena</th>
            <th>Miasto</th>
            <th>Ulica</th>
            <th>Numer</th>
            <th>Lokal</th>
            <th>Kod</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Orders)
        {
            <tr>
                <td style="white-space:nowrap">@item.ClientEmail</td>
                <td style="white-space:nowrap">@item.ClientCompany</td>
                <td style="white-space:nowrap">@item.Price</td>
                <td style="white-space:nowrap">@item.ClientAddress.City</td>
                <td style="white-space:nowrap">@item.ClientAddress.Street</td>
                <td style="white-space:nowrap">@item.ClientAddress.Number</td>
                <td style="white-space:nowrap">@item.ClientAddress.Flat</td>
                <td style="white-space:nowrap">@item.ClientAddress.PostalCode</td>
                <td style="white-space:nowrap">
                    <button class="btn btn-primary" @onclick="() => Choose(item)">Wybierz</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IEnumerable<ApiOrder> Orders = new List<ApiOrder>();

    private void Choose(ApiOrder item)
    {
        Container.Orders.Clear();
        Container.Orders.Add(item);
        NavigationManager.NavigateTo("/OfficeWorker/Orders/Review");
    }

    protected async override Task OnInitializedAsync()
    {
        var x = await Http.GetAsync($"{Http.BaseAddress}Order/1/order");
        Console.WriteLine(x.StatusCode + " GET ORDERS BY STATUS");

        if (x.IsSuccessStatusCode)
        {
            var c = await x.Content.ReadFromJsonAsync<IEnumerable<ApiOrder>>();
            if (c != null)
            {
                Orders = c;
            }
            else
            {
                Console.WriteLine("BAD DESERIALIZATION");
            }
        }
        else
        {
            Console.WriteLine("FAIL");
        }
    }

}
