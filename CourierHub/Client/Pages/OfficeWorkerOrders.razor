@page "/OfficeWorker/Orders"

@using CourierHub.Shared.ApiModels
@using CourierHub.Client.Data
@using Radzen
@using Radzen.Blazor

@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider Provider
@inject OrderContainer Container

<h1>Oferty do akceptacji</h1>

@* <table class="table">
    <thead>
        <tr>
            <th>Mail</th>
            <th>Firma</th>
            <th>Cena</th>
            <th>Miasto</th>
            <th>Ulica</th>
            <th>Numer</th>
            <th>Lokal</th>
            <th>Kod</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Orders)
        {
            <tr>
                <td style="white-space:nowrap">@item.ClientEmail</td>
                <td style="white-space:nowrap">@item.ClientCompany</td>
                <td style="white-space:nowrap">@item.Price</td>
                <td style="white-space:nowrap">@item.ClientAddress.City</td>
                <td style="white-space:nowrap">@item.ClientAddress.Street</td>
                <td style="white-space:nowrap">@item.ClientAddress.Number</td>
                <td style="white-space:nowrap">@item.ClientAddress.Flat</td>
                <td style="white-space:nowrap">@item.ClientAddress.PostalCode</td>
                <td style="white-space:nowrap">
                    <button class="btn btn-primary" @onclick="() => Choose(item)">Wybierz</button>
                </td>
            </tr>
        }
    </tbody>
</table> *@

<RadzenDataGrid AllowFiltering="true" AllowMultiColumnSorting="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.SimpleWithMenu" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@Orders" TItem="ApiOrder" LogicalFilterOperator="LogicalFilterOperator.Or"
                EmptyText="Brak pasujących rekordów" ContainsText="Zawiera ..." StartsWithText="Zaczyna się od ..." EndsWithText="Kończy się na ..." DoesNotContainText="Nie zawiera ..." IsNullText="Jest NULLem" IsEmptyText="Jest puste" IsNotEmptyText="Nie jest puste"
                IsNotNullText="Nie jest NULLem" EqualsText="Jest równe ..." NotEqualsText="Nie jest równe ..." GreaterThanOrEqualsText="Większe lub równe ..." GreaterThanText="Większe niż ..."
                LessThanOrEqualsText="Mniejsze lub równe ..." LessThanText="Mniejsze niż ..." ApplyFilterText="Zastosuj" ClearFilterText="Wyczyść" FilterText="Filtr">
    <Columns>
        <RadzenDataGridColumn TItem="ApiOrder" Property="ClientEmail" Filterable="true" Sortable="true" Title="Mail" Width="200px" TextAlign="TextAlign.Center"/>
        <RadzenDataGridColumn TItem="ApiOrder" Property="ClientCompany" Filterable="true" Sortable="true" Title="Firma" Width="150px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="ApiOrder" Property="Price" Filterable="true" Sortable="true" Title="Cena" Width="150px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="ApiOrder" Property="ClientAddress" Filterable="false" Sortable="false" Title="Adres klienta" Width="540px" TextAlign="TextAlign.Center">
            <Columns>
                <RadzenDataGridColumn TItem="ApiOrder" Property="ClientAddress.City" Title="Miasto" Width="150px" TextAlign="TextAlign.Center" />
                <RadzenDataGridColumn TItem="ApiOrder" Property="ClientAddress.Street" Title="Ulica" Width="150px" TextAlign="TextAlign.Center" />
                <RadzenDataGridColumn TItem="ApiOrder" Property="ClientAddress.Number" Title="Budynek" Width="80px" TextAlign="TextAlign.Center" />
                <RadzenDataGridColumn TItem="ApiOrder" Property="ClientAddress.Flat" Title="Lokal" Width="80px" TextAlign="TextAlign.Center" />
                <RadzenDataGridColumn TItem="ApiOrder" Property="ClientAddress.PostalCode" Title="Kod" Width="80px" TextAlign="TextAlign.Center" />
            </Columns>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="ApiOrder" Context="Order" Filterable="false" Sortable="false" Frozen="true" Width="80px" TextAlign="TextAlign.Center">
            <Template Context="Order">
                <RadzenButton RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => Choose(Order))" @onclick:stopPropagation="true" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    private IEnumerable<ApiOrder> Orders = new List<ApiOrder>();

    private void Choose(ApiOrder item)
    {
        Container.Orders.Clear();
        Container.Orders.Add(item);
        NavigationManager.NavigateTo("/OfficeWorker/Orders/Review");
    }

    protected async override Task OnInitializedAsync()
    {
        var x = await Http.GetAsync($"{Http.BaseAddress}Order/1/order");
        Console.WriteLine(x.StatusCode + " GET ORDERS BY STATUS");

        if (x.IsSuccessStatusCode)
        {
            var c = await x.Content.ReadFromJsonAsync<IEnumerable<ApiOrder>>();
            if (c != null)
            {
                Orders = c;
            }
            else
            {
                Console.WriteLine("BAD DESERIALIZATION");
            }
        }
        else
        {
            Console.WriteLine("FAIL");
        }
    }

}
