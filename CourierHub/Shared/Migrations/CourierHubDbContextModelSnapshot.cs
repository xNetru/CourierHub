// <auto-generated />
using System;
using CourierHub.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourierHub.Shared.Migrations
{
    [DbContext(typeof(CourierHubDbContext))]
    partial class CourierHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourierHub.Shared.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Flat")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength();

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength();

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("Postal_code")
                        .IsFixedLength();

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.ClientData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("Address_Id");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength();

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<int>("SourceAddressId")
                        .HasColumnType("int")
                        .HasColumnName("Source_address_Id");

                    b.HasKey("Id")
                        .HasName("PK_Client_data");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SourceAddressId");

                    b.ToTable("Client_data", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<int>("OfficeWorkerId")
                        .HasColumnType("int")
                        .HasColumnName("Worker_Id");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("ntext")
                        .HasColumnName("Rejection_reason");

                    b.HasKey("Id");

                    b.HasIndex("OfficeWorkerId");

                    b.ToTable("Evaluation", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Inquire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<DateTime>("DestinationDate")
                        .HasColumnType("date")
                        .HasColumnName("Destination_date");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int")
                        .HasColumnName("Destination_Id");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Mass")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("SourceDate")
                        .HasColumnType("date")
                        .HasColumnName("Source_date");

                    b.Property<int>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("Source_Id");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("SourceId");

                    b.ToTable("Inquire", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientAddressId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Address_Id");

                    b.Property<string>("ClientCompany")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Client_Company");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Client_Email");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Client_Name");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("Client_Phone")
                        .IsFixedLength();

                    b.Property<string>("ClientSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Client_Surname");

                    b.Property<int?>("EvaluationId")
                        .HasColumnType("int")
                        .HasColumnName("Evaluation_Id");

                    b.Property<int>("InquireId")
                        .HasColumnType("int")
                        .HasColumnName("Inquire_Id");

                    b.Property<int?>("ParcelId")
                        .HasColumnType("int")
                        .HasColumnName("Parcel_Id");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int")
                        .HasColumnName("Review_Id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_Id");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("Status_Id");

                    b.HasKey("Id");

                    b.HasIndex("ClientAddressId");

                    b.HasIndex("EvaluationId");

                    b.HasIndex("InquireId");

                    b.HasIndex("ParcelId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StatusId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourierId")
                        .HasColumnType("int")
                        .HasColumnName("Courier_Id");

                    b.Property<DateTime?>("DeliveryDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("Delivery_datetime");

                    b.Property<DateTime?>("PickupDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("Pickup_datetime");

                    b.Property<string>("UndeliveredReason")
                        .HasColumnType("ntext")
                        .HasColumnName("Undelivered_reason");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("Parcel", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("DepthMax")
                        .HasColumnType("int")
                        .HasColumnName("Depth_max");

                    b.Property<int?>("LengthMax")
                        .HasColumnType("int")
                        .HasColumnName("Length_max");

                    b.Property<int?>("MassMax")
                        .HasColumnType("int")
                        .HasColumnName("Mass_max");

                    b.Property<float?>("VelocityMax")
                        .HasColumnType("real")
                        .HasColumnName("Velocity_max");

                    b.Property<int?>("WidthMax")
                        .HasColumnType("int")
                        .HasColumnName("Width_max");

                    b.HasKey("Id");

                    b.ToTable("Rule", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Scaler", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Company")
                        .HasColumnType("money");

                    b.Property<decimal?>("Depth")
                        .HasColumnType("money");

                    b.Property<decimal?>("Distance")
                        .HasColumnType("money");

                    b.Property<decimal?>("Fee")
                        .HasColumnType("money");

                    b.Property<decimal?>("Length")
                        .HasColumnType("money");

                    b.Property<decimal?>("Mass")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Priority")
                        .HasColumnType("money");

                    b.Property<float?>("Tax")
                        .HasColumnType("real");

                    b.Property<decimal?>("Time")
                        .HasColumnType("money");

                    b.Property<decimal?>("Weekend")
                        .HasColumnType("money");

                    b.Property<decimal?>("Width")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Scaler", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Api_key");

                    b.Property<string>("BaseAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsIntegrated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Statute")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CourierHub.Shared.Models.ClientData", b =>
                {
                    b.HasOne("CourierHub.Shared.Models.Address", "Address")
                        .WithMany("ClientDatumAddresses")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK_Client_data_Address1");

                    b.HasOne("CourierHub.Shared.Models.User", "Client")
                        .WithMany("ClientData")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Client_data_User");

                    b.HasOne("CourierHub.Shared.Models.Address", "SourceAddress")
                        .WithMany("ClientDatumSourceAddresses")
                        .HasForeignKey("SourceAddressId")
                        .IsRequired()
                        .HasConstraintName("FK_Client_data_Address2");

                    b.Navigation("Address");

                    b.Navigation("Client");

                    b.Navigation("SourceAddress");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Evaluation", b =>
                {
                    b.HasOne("CourierHub.Shared.Models.User", "OfficeWorker")
                        .WithMany("Evaluations")
                        .HasForeignKey("OfficeWorkerId")
                        .IsRequired()
                        .HasConstraintName("FK_Evaluation_User");

                    b.Navigation("OfficeWorker");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Inquire", b =>
                {
                    b.HasOne("CourierHub.Shared.Models.User", "Client")
                        .WithMany("Inquires")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Inquire_User");

                    b.HasOne("CourierHub.Shared.Models.Address", "Destination")
                        .WithMany("InquireDestinations")
                        .HasForeignKey("DestinationId")
                        .IsRequired()
                        .HasConstraintName("FK_Inquire_Address1");

                    b.HasOne("CourierHub.Shared.Models.Address", "Source")
                        .WithMany("InquireSources")
                        .HasForeignKey("SourceId")
                        .IsRequired()
                        .HasConstraintName("FK_Inquire_Address");

                    b.Navigation("Client");

                    b.Navigation("Destination");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Order", b =>
                {
                    b.HasOne("CourierHub.Shared.Models.Address", "ClientAddress")
                        .WithMany("Orders")
                        .HasForeignKey("ClientAddressId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Address");

                    b.HasOne("CourierHub.Shared.Models.Evaluation", "Evaluation")
                        .WithMany("Orders")
                        .HasForeignKey("EvaluationId")
                        .HasConstraintName("FK_Order_Evaluation");

                    b.HasOne("CourierHub.Shared.Models.Inquire", "Inquire")
                        .WithMany("Orders")
                        .HasForeignKey("InquireId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Inquire");

                    b.HasOne("CourierHub.Shared.Models.Parcel", "Parcel")
                        .WithMany("Orders")
                        .HasForeignKey("ParcelId")
                        .HasConstraintName("FK_Order_Parcel");

                    b.HasOne("CourierHub.Shared.Models.Review", "Review")
                        .WithMany("Orders")
                        .HasForeignKey("ReviewId")
                        .HasConstraintName("FK_Order_Review");

                    b.HasOne("CourierHub.Shared.Models.Service", "Service")
                        .WithMany("Orders")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Service");

                    b.HasOne("CourierHub.Shared.Models.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Status");

                    b.Navigation("ClientAddress");

                    b.Navigation("Evaluation");

                    b.Navigation("Inquire");

                    b.Navigation("Parcel");

                    b.Navigation("Review");

                    b.Navigation("Service");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Parcel", b =>
                {
                    b.HasOne("CourierHub.Shared.Models.User", "Courier")
                        .WithMany("Parcels")
                        .HasForeignKey("CourierId")
                        .IsRequired()
                        .HasConstraintName("FK_Parcel_User");

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Address", b =>
                {
                    b.Navigation("ClientDatumAddresses");

                    b.Navigation("ClientDatumSourceAddresses");

                    b.Navigation("InquireDestinations");

                    b.Navigation("InquireSources");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Evaluation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Inquire", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Parcel", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Review", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Service", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.Status", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CourierHub.Shared.Models.User", b =>
                {
                    b.Navigation("ClientData");

                    b.Navigation("Evaluations");

                    b.Navigation("Inquires");

                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
